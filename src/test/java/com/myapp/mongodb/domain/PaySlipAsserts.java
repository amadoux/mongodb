package com.myapp.mongodb.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PaySlipAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaySlipAllPropertiesEquals(PaySlip expected, PaySlip actual) {
        assertPaySlipAutoGeneratedPropertiesEquals(expected, actual);
        assertPaySlipAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaySlipAllUpdatablePropertiesEquals(PaySlip expected, PaySlip actual) {
        assertPaySlipUpdatableFieldsEquals(expected, actual);
        assertPaySlipUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaySlipAutoGeneratedPropertiesEquals(PaySlip expected, PaySlip actual) {
        assertThat(expected)
            .as("Verify PaySlip auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaySlipUpdatableFieldsEquals(PaySlip expected, PaySlip actual) {
        assertThat(expected)
            .as("Verify PaySlip relevant properties")
            .satisfies(e -> assertThat(e.getNetSalaryPay()).as("check netSalaryPay").isEqualTo(actual.getNetSalaryPay()))
            .satisfies(e -> assertThat(e.getPaySlipDate()).as("check paySlipDate").isEqualTo(actual.getPaySlipDate()))
            .satisfies(e -> assertThat(e.getUploadPaySlip()).as("check uploadPaySlip").isEqualTo(actual.getUploadPaySlip()))
            .satisfies(
                e ->
                    assertThat(e.getUploadPaySlipContentType())
                        .as("check uploadPaySlip contenty type")
                        .isEqualTo(actual.getUploadPaySlipContentType())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaySlipUpdatableRelationshipsEquals(PaySlip expected, PaySlip actual) {
        assertThat(expected)
            .as("Verify PaySlip relationships")
            .satisfies(e -> assertThat(e.getEmployee()).as("check employee").isEqualTo(actual.getEmployee()));
    }
}
